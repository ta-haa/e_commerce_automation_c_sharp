<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAE
        AADDDgAAww4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAj0AAgI5IgICPbsCAj21AgI4HQIC
        OwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAjkAAgI2HAICQagDA1D6AwNQ+QIC
        QKECAjYZAgI4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICNwACAjcAAgI3IAICQawDA1D7AwNY/wMD
        WP8DA1D6AgJBpgICNh0CAjcAAgI2AAAAAAAAAAAAAAAAAAICNQACAjwAAgI2HgICQagDA1D+AwNY/wMD
        WP8DA1j/AwNY/wMDUP4CAkGgAgI2GgICOwACAjUAAAAAAAAAAAACAi8BAgI3IgICQaoDA0/+AwNW/wMD
        V/8DA1j/AwNY/wMDV/8DA1b/AwNP/QICQaQCAjcdAgIvAQAAAAACAjUAAgI4EQICQq0DA1H+AgI7+AEB
        G+4CAkL4AwNZ7wMDWPACAj/4AQEb7gICPvkDA1D8AgJBpQICOA0CAjQAAgIyAgICRDUDA1HjAgI6/wEB
        EKYAAAAuAQEPtAEBI3wBASGCAQEPrgAAAC0BARGvAgI8/wMDUd4CAkMvAgIxAgICPw4CAka6AgJF/wAA
        Cu4AAACGAAAAOgAAAJIAAACpAAAAqgAAAI4AAAA6AAAAjQAADPECAkf/AgJFsQICPgoDA1UJAwNXfQIB
        RJ0CDCGLBSRWpwQZPPQGKWGWCDqJawg6iGsGKF6bBBk89AUlV6ICCh+NAgFGnQMDV3cDA1UHCUKYAAlB
        mg4JQZl0CUGZqQlBmfwJQZn/CUCX/wc4hv4JQJb+CUGZ/wlBmf8JQZn7CUGZpQlBmXAJQZoLCUKYAAlD
        nREJQZmKCUCX9AlBmfoJQZn/CUGZ/wlAmP8HOIX/BzZ//wlAlv8JQZn/CUGZ/wlBmfoJQJfyCUGZgwlD
        ng4IPZKYCDqO9gYxd8UIPZB+CUCW/AlBmf8JQZn/CUGY/wc5hv8HNn//CUCW/wlAlvkIPI56BjJ4ywg6
        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
        RPwDA1n8AwNY/AMDWJMAAAAAAAAAAAAAAAADA1gBAwNYNgMDWFEDAVhPAgA7TgAAAE4GLWl/CUCXsQcw
        cO4GLGn/Bixp/wczedwJQZmuCUGarglBmq4JQZmuCUGZrglBma8HMnbjBixp/wYsaf8HMXPoCUGYrwYo
        XncAAABOAgBBTgMCWE8DA1hRAwNYLwAAAAAAAAAAAAAAAAMDWAADA1gAAAAAAApKoxwKSaQjCkmsIwlC
        m5UJQZn/CUKb/wlCnP8JQpz/CUKa/wlBmf8IPpP/CD6S/wlBmP8JQZn/CUGZ/wlCm/8JQpz/CUKc/wlC
        m/8JQZn/CUKcggpJrCMKSaQjCkukGgAAJQADA1gAAAAAAAAAAAAAAAAACUGZAAlBmQAJQZkQCUGZwglB
        megJQZnoCUGZ9AlBmf8JQZn/CUGZ/wlBmf8JQZn/CUCY/wYwcv8FLm3/CUCW/wlBmv8JQZn/CUGZ/wlB
        mf8JQZn/CUGZ/wlBmf8JQZnyCUGZ6AlBmegJQZm0CUGZBwlBmQAAAAAAAAAAAAlBmQAJQZkBCUGZOQlB
        mWQJQZnlCUGZ/wlBmf8JQZn/CUGZ/wlBmf8JQZn/CUGZ/wlBmf8JQZj/BzV9/wYxdf8HOIT/CDyN/wlB
        mf8JQZn/CUGZ/wlBmf8JQZn/CUGZ/wlBmf8JQZn/CUGZ/wlBmdsJQZleCUGZMglBmQAJQZkACUGZAAlB
        mQMJQZmoCUGZ/QlBmf8JQZn/CUGZ/glBmf8JQZn/CUGZ/wlBmf8JQZn/CUGZ/wlBmf8JQZn/CD2P/wQq
        ZP8GMXT/CUGZ/wlBmf8JQZn/CUGZ/wlBmf8JQZn/CUGZ/wlBmf4JQZn/CUGZ/wlBmf0JQZmUCUGZAQlB
        mQAJQZlECUGZoQlBmuAJQJb/BjR6/wYzec8JQJheCUGZrwlBmf8JQZn/CUGZ/wlBmf8JQZn/CUGZ/wlB
        mf8JP5X/BzmG/wc1fv8GMXX/CDuM/wlBmv8JQZn/CUGZ/wlBmf8JQZmhCT+VYQYyeNsHNX3/CUGY/wlB
        mdgJQZmeCUGZNgk/lW0JP5X/CT2V/wg7kP0FK2jvBCdepAxVyQAJP5V/CT+V/wlBmP8JQZn/CUGZ/wlB
        mf8JQZn/CUGZ/wlBmf8JQpv/BzmH/wQqZP8HN4P/CUCW/wlBmP8JQJj/CT+V/wk/lWkAAAACBCdetQUs
        a/AIO5L+CT6V/wk/lfwJP5VXBSxqbQUsav8EGGX/BA1j8QQaYk8EKF8fAAAAAAUsaYQFLWz/CD2P/wlC
        mv8JQZn/CUGZ/wlBmf8JQZn/CUGZ/wlBmf8JP5X/CD2P/wYydv8FLWz/CD6S/wg8jf8FLWv/BSxqbgEY
        PQEEKF8iBBhiXAQNY/kEGmb/BSxq/AUsalcEKF9MBCdftAMPWrUDAVelAwBWGwQoXwAAAAAABCdfXAQp
        YrkHN4HvCDyN/wlBmP8JQZn/CUGZ/wlBmf8JQZn/CUGZ/wlBmf8JQZn/BzV+/wUvcf8HOIX/BzaA6gQo
        YLcEKF9NARg9AAQoXwADAFYmAwFXrAMSWrUEKF+wBChfPQQoYAIEKGAFAw9bBQMCWAUDA1gBAAAAAAAA
        AAAEKGADBChhEgQoYMoFLm7/CUCX/wlBmf8JQZn/CUGZ/wlBmf8JQZn/CUGZ/wlBmf8JQZn/CT+U/wUt
        av8EKGC5BChhCwQoYAIAAAAAAAAAAAMDWAEDAlgFAxJbBQQoYAUEKGACBChgAAQoYAADD1sAAwJYAAMD
        WAAAAAAAAAAAAAQoYAAEKGAFBCdfUwUsao0GMnb5BzmG/wlBmf8JQZn/CUGZ/wlBmf8JQZn/CUGZ/wc4
        g/8GMnb0BStogwQoX0sEKGACBChgAAAAAAAAAAAAAwNYAAMCWAADElsABChgAAQoYAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQoYAAEKF8ABChfNQQnXucGMnf3CUCW/wlBmP8JQZn/CUGZ/wlB
        mP8JQJb/BjBz9gQnXt4EKF8mBChfAAQoYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEKGANBChfNAUsaY4FLm3/CDuM/wlB
        mv8JQZr/CDqJ/wUtbP8FLGl+BChfMgQoYAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQoYAAEKF8ABCdfUAQo
        YL8IOom/CUGavwlBmr8HOIS/BChfvgQoX0EEKF8ABChgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAEKGAFBClhCwg6iQsJQZoLCUGaCwc4hQsEKGALBChgBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/4P///8A////AP///AA///wAP//wAA//4AAH/+AAB/+AAAH/gA
        AB/gAAAH4AAAB+AAAAfAMAwDgDAMA4AAAAOAAAADgAAAA/AAAA/gAAAHgAAAA4AAAAEAAAAAAgAAAAIA
        AAAGAABgBgAAYP8AAP//wAP//8AD///wD///8A//
</value>
  </data>
</root>